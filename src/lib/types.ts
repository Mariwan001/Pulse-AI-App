export interface Message {
  id: string;
  text: string;
  sender: 'user' | 'ai';
  timestamp: Date;
  sessionId?: string;
  isLoading?: boolean;
  imageDataUri?: string; // For images sent by the user
  imageFileName?: string; // Optional: for user's image file name
  aiGeneratedImageUrl?: string; // For images generated by the AI
  isUser?: boolean; // True if the message is from the user
  relatedToUserMessageId?: string; // ID of the user message this AI message is a response to
  imageUrl?: string; // Optional: for image URLs
  imageFileUrl?: string; // Optional: for image file URLs
}

export interface ChatSession {
  id: string;
  user_id: string;
  created_at: string;
  // The 'topic' from the DB is used as the 'title' in the UI
  topic?: string | null; 
}

export interface ChatMessage {
  id?: number;
  user_id: string;
  session_id: string;
  role: 'user' | 'assistant';
  content: string;
  created_at?: string;
  image_data_uri?: string;
  image_file_name?: string;
  ai_generated_image_url?: string;
  image_url?: string;
}

// For streaming from AI flow
export type StreamChunk =
  | { type: 'text'; content: string }
  | { type: 'image'; content: string /* data URI of AI generated image */ }
  | { type: 'error'; content: string }
  | { 
      type: 'tool_code'; 
      toolInvocations: {
        toolName: string;
        args: any;
      }[];
    };

// User Preferences Interface
export interface UserPreferences {
  aiName: string;
  userName: string;
  responseStyle: "detailed" | "concise";
  onboardingCompleted: boolean;
  interests?: string;
  tone?: string;
  favoriteTopics?: string;
}
